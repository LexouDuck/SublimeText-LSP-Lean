{
	"env": {
		// "HTTP_PROXY_HOST": "",
		// "HTTP_PROXY_PORT": "",
		// "HTTP_PROXY_USERNAME": "",
		// "HTTP_PROXY_PASSWORD": "",
	},

	// Start this server when opening a lean file
	"selector": "source.lean",

	// The startup command for this language server
	"command": [ "lean", "--server" ],

	// Initialization options sent to the subprocess during startup.
	// You should normally not touch this.
	"initializationOptions": {
		// We understand how to handle configuration changes from the server.
		"changeConfiguration": true
	},

	"settings":
	{
		// Infoview Display Settings

		// Whether or not to display current goal information (the ongoing goal at cursor)
		// This shows the progress of the proof at the current cursor position
		"infoview_display_current_goals": true,

		// Whether or not to display expected type information (the type of the subterm at cursor)
		// This shows what type Lean expects at the current cursor position
		"infoview_display_expected_type": true,

		// Display "No goals" message when cursor is at a position with no goals
		// If false, the infoview will not be displauyed when there are no goals
		"infoview_display_nogoals": false,

		// Display mode: Use mdpopups (true) or output panel (false)
		// mdpopups shows a popup at the cursor position with rich formatting
		// output panel shows goals in a bottom panel (better for pinning/keeping visible, allows for copy/paste)
		"infoview_mdpopup": true,

		// How much time (in seconds) to wait before updating the infoview display
		"infoview_delay": 0.1,

		// The path of the syntax coloring file to use in the infoview display
		// This setting has no effect if "display_mdpopup" is true
		"infoview_syntaxfile": "Packages/Lean/Lean.sublime-syntax",

		// Unicode Input Settings
		
		// Enable unicode abbreviation input (e.g., \alpha → α)
		"unicode_input_enabled": true,
		
		// Leader character to trigger unicode input (default: backslash)
		"unicode_input_leader": "\\",
		
		// Ending character to complete unicode input (default: tab)
		"unicode_input_ender": "\t",
		
		// Enable eager replacement when abbreviation is complete.
		// If false, requires Tab to trigger replacement
		"unicode_input_eager_replacement": true,
		
		// Custom abbreviation translations (JSON object)
		// Example: {"foo": "☺"} will make \foo produce ☺
		"unicode_input_custom_translations": {}
	}
}